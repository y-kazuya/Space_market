%script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?key=#{ENV["GOOGLE_API_KEY"]}&callback=initMap"}
#map_contents

:javascript
  $(function(){
    var $footer = $('.footer')
    $footer.hide();
  });

  function sleep(waitMsec) {
    var startMsec = new Date();
    // 指定ミリ秒間だけループさせる（CPUは常にビジー状態）
    while (new Date() - startMsec < waitMsec);
  }

  function initMap() {
    var target = document.getElementById('map_contents');
    var geocoder = new google.maps.Geocoder();
    var rooms = $('.summary_list')
    
    geocoder.geocode({ address: rooms[0].dataset.address }, function(results, status){
      if (status === 'OK' && results[0]){  //status を確認して処理開始
         map = new google.maps.Map(target, {
            center: results[0].geometry.location,
            zoom: 8
          });
      }else{
        alert('失敗しました。理由: ' + status);
      }
    });

    for( var room of rooms ) {
 
      var address = room.dataset.address
      let link = room.dataset.link
      let title = room.dataset.title

      geocoder.geocode({ address: address}, function(results, status){

        if (status === 'OK' && results[0]){
          console.log(link)          
          //マーカーの生成
            var marker = new google.maps.Marker({
              position: results[0].geometry.location,
              map: map,
              animation: google.maps.Animation.DROP
            });

          //情報ウィンドウ
            var infoWindow = new google.maps.InfoWindow({
              content: `<a href="${link}" target="_blank">${title}</a>`,
              pixelOffset: new google.maps.Size(0, 5)
            });

          //マーカーにリスナーを設定
            marker.addListener('click', function(){
              infoWindow.open(map, marker);
            });
        }else if(status == "OVER_QUERY_LIMIT"){
          sleep(1);
        }else{
          alert('失敗しました。理由: ' + status);
          return;
        }
      });
    };
  }
